on:
  push:
    tags:
      - release/*

name: Release

jobs:
  check:
    name: Check Release
    env:
      PROJECT_NAME_UNDERSCORE: sling
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: echo "RELEASE=$(basename "${{ github.ref }}")" >>$GITHUB_ENV
      - run: test -e changelog/${RELEASE}.md
  release-draft:
    name: Draft Release
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: echo "RELEASE=$(basename "${{ github.ref }}")" >>$GITHUB_ENV
      - run: test -e changelog/${RELEASE}.md
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ env.RELEASE }}
          body_path: changelog/${{ env.RELEASE }}.md
          draft: false
          prerelease: false
  build:
    name: Build
    needs: release-draft
    env:
      PROJECT_NAME_UNDERSCORE: sling
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: sling
            asset_name: sling-linux-amd64
          - os: windows-latest
            artifact_name: sling.exe
            asset_name: sling-windows-amd64
          - os: macos-latest
            artifact_name: sling
            asset_name: sling-macos-amd64
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Rust MUSL Builder
        uses: NSCoder/rust-musl-action@v1.0.0
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}